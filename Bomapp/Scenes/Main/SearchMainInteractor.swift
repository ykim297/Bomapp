//
//  SearchMainInteractor.swift
//  Bomapp
//
//  Created by Yong Seok Kim on 2020/07/04.
//  Copyright (c) 2020 Yong Seok Kim. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchMainBusinessLogic{
    func getSearchList(request: SearchMain.Repository.Request)
    func getSearchUSerList(request: SearchMain.User.Request)
    func searchDetailSelected(_ item: SearchResultModel?)
}

protocol SearchMainDataStore {
    var selectedSearchData: SearchResultModel? { get set }
}

class SearchMainInteractor: SearchMainBusinessLogic, SearchMainDataStore {
    var presenter: SearchMainPresentationLogic?
    var worker: SearchMainWorker = SearchMainWorker()
    var selectedSearchData: SearchResultModel?
    
    
    // MARK: DataStore
    func searchDetailSelected(_ item: SearchResultModel?) {
        selectedSearchData = item
    }
    
    // MARK: Do Connect
    func getSearchList(request: SearchMain.Repository.Request) {
        
        worker.getList(model: request, completion: { success, model in
            if success, let m = model {
                self.presenter?.present(response: m)
            } else {
                self.presenter?.presentError()
            }
        })
    }
    
    func getSearchUSerList(request: SearchMain.User.Request) {
        
        worker.getUserList(model: request, completion: { success, model in
            if success, let m = model {
                self.presenter?.presentUserList(response: m)
            } else {
                self.presenter?.presentError()
            }
        })
    }

}
